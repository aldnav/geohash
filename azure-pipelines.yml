# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
  - name: STRATEGY
    type: object
    displayName: "Test strategy"
    default:
        maxParallel: 6
        matrix:
            Batch1:
              RUN_NUMBER: 1
            Batch2:
              RUN_NUMBER: 2
            Batch3:
              RUN_NUMBER: 3
            Batch4:
              RUN_NUMBER: 4
            Batch5:
              RUN_NUMBER: 5
            Batch6:
              RUN_NUMBER: 6
            Batch7:
              RUN_NUMBER: 7
            Batch8:
              RUN_NUMBER: 8
            Batch9:
              RUN_NUMBER: 9
            Batch10:
              RUN_NUMBER: 10
            Batch11:
              RUN_NUMBER: 11
            Batch12:
              RUN_NUMBER: 12
            Batch13:
              RUN_NUMBER: 13
            Batch14:
              RUN_NUMBER: 14
            Batch15:
              RUN_NUMBER: 15
            Batch16:
              RUN_NUMBER: 16
            Batch17:
              RUN_NUMBER: 17
            Batch18:
              RUN_NUMBER: 18
            Batch19:
              RUN_NUMBER: 19
            Batch20:
              RUN_NUMBER: 20

jobs:
- job: Build
  variables:
    MATRIX_VALUES: $[ dependencies.PreBuild.outputs['passOutput.MATRIX_VALUES'] ]  
  strategy:
    ${{ insert }}: ${{ parameters.STRATEGY }}

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10'
    displayName: 'Use Python 3.10'

  - task: PythonScript@0
    displayName: 'Testing variables and parameters'
    inputs:
      scriptSource: 'inline'
      script: |
        print(f"Running {$(RUN_NUMBER)}")
