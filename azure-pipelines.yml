# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
  - name: PARALLEL_RUNS
    type: number
    displayName: "Number of testing jobs to run in parallel"
    default: "6"
    values:
      - 1
      - 2
      - 4
      - 6
      - 8
      - 10
      - 12
      - 14
      - 16
      - 18
      - 20
  - name: NUM_BATCHES
    type: number
    displayName: "Number of batches or splits"
    default: "12"
    values:
      - 1
      - 2
      - 4
      - 6
      - 8
      - 10
      - 12
      - 14
      - 16
      - 18
      - 20

jobs:
- job: PreBuild
  displayName: Prepare test matrix
  steps:
  - task: PythonScript@0
    displayName: 'Export project path'
    inputs:
      scriptSource: 'inline'
      script: |
        """Set strategy matrix,maxParallel variables"""
        project_location  = "$(System.DefaultWorkingDirectory)/scope"
        matrix = [f"-{idx+1}\n" for idx in range($(parameters.NUM_BATCHES))]
        print('##vso[task.setvariable variable=MATRIX_VALUES,isoutput=true]{}'.format(matrix))
    name: passOutput

- job: Build
  dependsOn: PreBuild
  variables:
    MATRIX_VALUES: $[ dependencies.PreBuild.outputs['passOutput.MATRIX_VALUES'] ]  
  strategy:
    matrix:
      ${{ each BATCH_IDX in variables.MATRIX_VALUES }}:
      Batch${{ BATCH_IDX }}:
        RUN_NUMBER: ${{ BATCH_IDX }}
    maxParallel: ${{ parameters.PARALLEL_RUNS }}

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10'
    displayName: 'Use Python 3.10'

  - task: PythonScript@0
    displayName: 'Testing variables and parameters'
    inputs:
      scriptSource: 'inline'
      script: |
        print(f"Running {$(RUN_NUMBER)} / {$(NUM_BATCHES)}")
